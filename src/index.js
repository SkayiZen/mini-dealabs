import inquirer from "inquirer"; // Librairie pour cr√©er des menus et interactions dans la console
import chalk from "chalk"; // Librairie pour styliser et colorer le texte dans la console
import {
  createDeal,
  listDeals,
  searchDeal,
  showDealDetails,
  deleteDeal,
  loadDeals,
} from "./dealManager.js"; // Import des fonctions de gestion des deals
import { voteDeal } from "./voteManager.js"; // Import de la fonction de vote (bon / mauvais deal)
import { showStats } from "./statsManager.js"; // Import de la fonction d'affichage des statistiques

// Efface la console pour un affichage propre au lancement
console.clear();

// Affiche le titre du programme avec un style color√©
console.log(chalk.cyan("========================================"));
console.log(chalk.bold("        MINI-DEALABS - Bons Plans"));
console.log(chalk.cyan("========================================"));
console.log(chalk.gray("Version 1.3.0\n"));

// Chargement des deals sauvegard√©s depuis le fichier JSON local
loadDeals();

    /*
    Fonction principale du programme.
    Elle affiche un menu interactif permettant √† l'utilisateur
    de choisir une action (afficher, cr√©er, voter, supprimer, etc.).
    Apr√®s chaque action, le menu est recharg√© automatiquement.
    */
async function mainMenu() {
  // Cr√©ation du menu principal avec Inquirer
  const { choice } = await inquirer.prompt([
    {
      type: "list",
      name: "choice",
      message: chalk.yellow("Que souhaitez-vous faire ?"),
      choices: [
        { name: "Voir tous les deals (tri√©s par score)", value: "list" },
        { name: "Afficher les d√©tails d‚Äôun deal", value: "details" },
        { name: "Rechercher un deal", value: "search" },
        { name: "Cr√©er un nouveau deal", value: "create" },
        { name: "Noter un deal (Bon / Mauvais)", value: "vote" },
        { name: "Supprimer un deal", value: "delete" },
        { name: "Voir les statistiques", value: "stats" },
        { name: "Quitter", value: "quit" },
      ],
    },
  ]);

  // Gestion du choix utilisateur via un switch
  switch (choice) {
    case "list":
      // Affiche la liste de tous les deals tri√©s par score
      await listDeals();
      break;

    case "details":
      // Affiche les d√©tails complets d‚Äôun deal sp√©cifique
      await showDealDetails();
      break;

    case "search":
      // Permet de rechercher ou filtrer les deals par cat√©gorie
      await searchDeal();
      break;

    case "create":
      // Cr√©e un nouveau deal (saisie guid√©e dans la console)
      await createDeal();
      break;

    case "vote":
      // Permet de voter pour un deal (Bon ou Mauvais)
      await voteDeal();
      break;

    case "delete":
      // Supprime un deal choisi apr√®s confirmation
      await deleteDeal();
      break;

    case "stats":
      // üìä Affiche les statistiques (top deals, r√©partition par cat√©gorie, etc.)
      await showStats();
      break;

    case "quit":
      // üö™ Quitte proprement l‚Äôapplication
      console.log(chalk.red("\nMerci d‚Äôavoir utilis√© Mini-Dealabs !"));
      process.exit(0);
  }

  // Ligne vide pour lisibilit√© dans la console
  console.log();

  // Retourne automatiquement au menu principal apr√®s chaque action
  await mainMenu();
}

// Lancement du programme en appelant la fonction principale
mainMenu();
